name: Android Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  x64:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        build_type:
          - release

    steps:
    - uses: actions/checkout@v4
    - name: Fetch submodules
      run: | 
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/x86_64/libAlber.so" ]; then
          git submodule update --init --recursive
        fi

    - name: Set BUILD_TYPE variable
      run: | 
        echo "BUILD_TYPE=${{ matrix.build_type }}" >> $GITHUB_ENV
        git diff --exit-code --quiet -- '*.cpp' '*.h' '*.hpp' || echo "CODE_CHANGED=true" >> $GITHUB_ENV
        git diff --exit-code --quiet -- submodule || echo "CODE_CHANGED=true" >> $GITHUB_ENV

    - name: Set up gradle caches
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/src/pandroid/app/src/main/jniLibs/x86_64
        key: ${{ runner.os }}-pandroid-x86_64-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-pandroid-x86_64-

    - name: Setup Vulkan SDK
      if: ${{ env.CODE_CHANGED == 'true' }}
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-use-cache: true
        vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Tools, Glslang

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Configure CMake
      run: |
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/x86_64/libAlber.so" ]; then
          echo "Code changed, rebuilding from scratch..."
          cmake -B ${{github.workspace}}/build -DBUILD_HYDRA_CORE=1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86_64 -DENABLE_VULKAN=0 -DENABLE_USER_BUILD=ON
        fi

    - name: Build
      run: |
        # Skip using the cache if code has changed
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/x86_64/libAlber.so" ]; then
          rm -f ./src/pandroid/app/src/main/jniLibs/x86_64/libAlber.so
        fi

        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/x86_64/libAlber.so" ]; then
          # Apply patch for GLES compatibility
          git apply ./.github/gles.patch
          # Build the project with CMake
          cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}

          # Strip the generated library and move it to the appropriate location
          ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip --strip-unneeded ./build/libAlber.so
          mv ./build/libAlber.so ./src/pandroid/app/src/main/jniLibs/x86_64/
        fi

        # Build the Android app with Gradle
        cd src/pandroid
        ./gradlew assemble${{ env.BUILD_TYPE }}
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Android APKs (x86-64)
        path: |
          ./src/pandroid/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-${{ env.BUILD_TYPE }}.apk

  arm64:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        build_type:
          - release

    steps:
    - uses: actions/checkout@v4
    - name: Fetch submodules
      run: |
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/arm64-v8a/libAlber.so" ]; then
          git submodule update --init --recursive
        fi

    - name: Set BUILD_TYPE variable
      run: | 
          echo "BUILD_TYPE=${{ matrix.build_type }}" >> $GITHUB_ENV
          git diff --exit-code --quiet -- '*.cpp' '*.h' '*.hpp' || echo "CODE_CHANGED=true" >> $GITHUB_ENV
          git diff --exit-code --quiet -- submodule || echo "CODE_CHANGED=true" >> $GITHUB_ENV       

    - name: Set up gradle caches
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/src/pandroid/app/src/main/jniLibs/arm64-v8a
        key: ${{ runner.os }}-pandroid-arm64-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-pandroid-arm64-

    - name: Setup Vulkan SDK
      if: ${{ env.CODE_CHANGED == 'true' }}
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-use-cache: true
        vulkan-components: Vulkan-Headers, Vulkan-Loader, SPIRV-Tools, Glslang

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Configure CMake
      run: |
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/arm64-v8a/libAlber.so" ]; then
          echo "Code changed, rebuilding from scratch..."
          cmake -B ${{github.workspace}}/build -DBUILD_HYDRA_CORE=1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DENABLE_VULKAN=0 -DENABLE_USER_BUILD=ON -DCMAKE_CXX_FLAGS="-march=armv8-a+crypto"
        fi

    - name: Build
      run: |
        # Skip using the cache if code has changed
        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/arm64-v8a/libAlber.so" ]; then
          rm -f ./src/pandroid/app/src/main/jniLibs/arm64-v8a/libAlber.so
        fi

        if [[ "$CODE_CHANGED" == "true" ]] || [ ! -f "./src/pandroid/app/src/main/jniLibs/arm64-v8a/libAlber.so" ]; then
          # Apply patch for GLES compatibility
          git apply ./.github/gles.patch

          # Build the project with CMake
          cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}

          # Strip the generated library and move it to the appropriate location
          ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip --strip-unneeded ./build/libAlber.so
          mv ./build/libAlber.so ./src/pandroid/app/src/main/jniLibs/arm64-v8a/
        fi

        # Build the Android app with Gradle
        cd src/pandroid
        ./gradlew assemble${{ env.BUILD_TYPE }}
        ls -R app/build/outputs
        cd ../..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Android APKs (arm64)
        path: |
          ./src/pandroid/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-${{ env.BUILD_TYPE }}.apk
          
